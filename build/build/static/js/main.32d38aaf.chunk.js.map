{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","react_default","a","createElement","className","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","props","concat","mode","href","title","aria-label","aria-current","about","role","placeholder","onClick","toggleMode","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","ev","target","rows","newText","toUpperCase","toLowerCase","split","length","defaultProps","Alert","alert","data-bs-dismiss","App","setDarkMode","document","body","style","background","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.32d38aaf.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function About() {\r\n    // let mystyle={\r\n    //     color:'red',\r\n    //     backgroundcolor:'blue'\r\n\r\n    // }\r\n  return (\r\n         \r\n    <div className='container my-5'  >\r\n    {/* style={mystyle} */}\r\n         <h1>Vinodkumar</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n      <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        Accordion Item #1\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        Accordion Item #2\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        Accordion Item #3\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the third item's accordion body.</strong> It is hidden by defa\r\n        ult, until the collapse plugin adds the appropriate classNamees that we use to style each\r\n         element. These classNamees control the overall appearance, as well as the showing and hiding v\r\n         ia CSS transitions. You can modify any of this with custom CSS or overriding our default variab\r\n         les. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>,\r\n          though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n    </div>\r\n \r\n  );\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    \r\n  <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">{props.about}</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/\">Link</a>\r\n        </li>\r\n        <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Dropdown\r\n          </a>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n            <li><hr className=\"dropdown-divider\"/></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n          </ul>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link disable\" href='/'>Disabled</a>\r\n        </li>\r\n      </ul>\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>\r\n      <div className={`form-check form-switch mx-3 text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\nNavbar.propTypes = {title:PropTypes.string,about:PropTypes.string}\r\nNavbar.defaultProps={title:\"Set title\",about:\"About text\"};","import React,{useState} from 'react';\r\nexport default function Textform(props) {\r\n  const handleUpClick = () =>{\r\n    let newText=text.toUpperCase();\r\n    setText(newText);\r\n  }\r\n  const handleLoClick = () =>{\r\n    let newText=text.toLowerCase();\r\n    setText(newText);\r\n  }\r\n  const handleOnChange = (ev) =>{\r\n    setText(ev.target.value);\r\n  }\r\n  \r\n  const [text, setText] = useState('Vinodkumar Chowdarys');\r\n    return (<>\r\n    <div className='container-my5'>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange}  id=\"mybox\" rows=\"8\"></textarea>\r\n            </div>\r\n            {/* <button className=\"btn btn-primary\" \r\n            onClick={() => setText(text + 1)} >Convert to uppercase</button> */}\r\n            <button className=\"btn btn-primary mx-8\" \r\n            onClick={handleUpClick} >Convert to uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" \r\n            onClick={handleLoClick} >Convert to Lowercase</button>\r\n            </div>\r\n            <div className='container my-2'>\r\n              <h1>Text Summary</h1>\r\n              <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n              <p>{0.008 * text.split(\" \").length} minutes to read</p>\r\n            </div>\r\n            </>\r\n       \r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n  {/* <strong>Holy guacamole!</strong> You should check in on some of those fields below. */}\r\n  {props.alert}\r\n  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm'\nimport React,{ useState } from 'react';\nimport Alert from './components/Alert';\nfunction App() {\n  const [mode, setDarkMode] = useState('dark');\nconst toggleMode=()=>{\n  if(mode==='light')\n    {setDarkMode('dark');\n  document.body.style.background='gray'}\n  else{setDarkMode('light');\n  document.body.style.background='light'}\n\n}\n  return (\n  <>\n{/* <Navbar title=\"Hello Cse\" about=\"Hi\"/> */}\n{/* <Navbar/> */}\n<Navbar title=\"Hello Cse\" mode={mode} toggleMode={toggleMode}/>\n<Alert alert=\"This is alert\"/>\n<div className=\"container my-3\">\n  <TextForm heading=\"Enter any text\"/>\n</div>\n<About/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}